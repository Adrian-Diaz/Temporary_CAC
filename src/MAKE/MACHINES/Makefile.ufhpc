# ufhpc = UF Hipergator 2.0: RHEL6, Intel, OpenMPI

SHELL = /bin/sh

# ---------------------------------------------------------------------
# compiler/linker settings
# specify flags and libraries needed for your compiler

#CC       =      mpiicc
CC       =      mpicxx
#CCFLAGS  =	-g -O2 -msse3 -axcore-avx2,core-avx-i -restrict -funroll-loops -fstrict-aliasing
#CXXFLAGS =	-g -O2 -msse3 -axcore-avx2,core-avx-i -restrict -funroll-loops -fstrict-aliasing
#FFLAGS   =	-g -O2 -msse3 -axcore-avx2,core-avx-i -restrict -funroll-loops -fstrict-aliasing

#CCFLAGS  =	-debug full -check=stack,uninit -O0 -fstrict-aliasing
#CXXFLAGS =	-debug full -check=stack,uninit -O0 -fstrict-aliasing
#FFLAGS   =	-debug full -check=stack,uninit -O0 -fstrict-aliasing



CCFLAGS  =      -O2  -DLAMMPS_MEMALIGN=64 -qno-offload -fno-alias -ansi-alias -restrict -fp-model fast=2 -no-prec-div -qoverride-limits
CXXFLAGS =       -O2  -DLAMMPS_MEMALIGN=64 -qno-offload -fno-alias -ansi-alias -restrict -fp-model fast=2 -no-prec-div -qoverride-limits
FFLAGS   =       -O2  -DLAMMPS_MEMALIGN=64 -qno-offload -fno-alias -ansi-alias -restrict -fp-model fast=2 -no-prec-div -qoverride-limits

SHFLAGS =	-fPIC
DEPFLAGS =	-M

#LINK =		mpiicpc
LINK =		mpicxx
LINKFLAGS =	-g 
LIB =          -lstdc++
#LIB =           -L/apps/compilers/gcc/5.2.0/lib64 -lstdc++
SIZE =		size

ARCHIVE =	ar
ARFLAGS =	-rcsv
SHLIBFLAGS =	-shared

# ---------------------------------------------------------------------
# LAMMPS-specific settings
# specify settings for LAMMPS features you will use
# if you change any -D setting, do full re-compile after "make clean"

# LAMMPS ifdef settings, OPTIONAL
# see possible settings in doc/Section_start.html#2_2 (step 4)

LMP_INC = -DLAMMPS_GZIP -DLAMMPS_MEMALIGN=64

# MPI library, REQUIRED
# see discussion in doc/Section_start.html#2_2 (step 5)
# can point to dummy MPI library in src/STUBS as in Makefile.serial
# INC = path for mpi.h, MPI compiler settings
# PATH = path for MPI library
# LIB = name of MPI library

MPI_INC = -DOMPI_SKIP_MPICXX=1
MPI_PATH = 
MPI_LIB =	

# FFT library, OPTIONAL
# see discussion in doc/Section_start.html#2_2 (step 6)
# can be left blank to use provided KISS FFT library
# INC = -DFFT setting, e.g. -DFFT_FFTW, FFT compiler settings
# PATH = path for FFT library
# LIB = name of FFT library

FFT_INC =  -DFFT_FFTW3 -I$(HPC_MKL_DIR)/include/fftw
FFT_PATH = 
FFT_LIB = -L$(HPC_MKL_DIR)/lib/intel64 -lmkl_intel_lp64 -lmkl_sequential -lmkl_core

# JPEG and/or PNG library, OPTIONAL
# see discussion in doc/Section_start.html#2_2 (step 7)
# only needed if -DLAMMPS_JPEG or -DLAMMPS_PNG listed with LMP_INC
# INC = path(s) for jpeglib.h and/or png.h
# PATH = path(s) for JPEG library and/or PNG library
# LIB = name(s) of JPEG library and/or PNG library

JPG_INC =       
JPG_PATH = 	
JPG_LIB =	

# ---------------------------------------------------------------------
# build rules and dependencies
# no need to edit this section

include	Makefile.package.settings
include	Makefile.package

EXTRA_INC = $(LMP_INC) $(PKG_INC) $(MPI_INC) $(FFT_INC) $(JPG_INC) $(PKG_SYSINC)
EXTRA_PATH = $(PKG_PATH) $(MPI_PATH) $(FFT_PATH) $(JPG_PATH) $(PKG_SYSPATH)
EXTRA_LIB = $(PKG_LIB) $(MPI_LIB) $(FFT_LIB) $(JPG_LIB) $(PKG_SYSLIB)

# Path to src files

vpath %.cpp ..
vpath %.h ..

# Link target

$(EXE):	$(OBJ)
	$(LINK) $(LINKFLAGS) $(EXTRA_PATH) $(OBJ) $(EXTRA_LIB) $(LIB) -o $(EXE)
	$(SIZE) $(EXE)

# Library targets

lib:	$(OBJ)
	$(ARCHIVE) $(ARFLAGS) $(EXE) $(OBJ)

shlib:	$(OBJ)
	$(CC) $(CCFLAGS) $(SHFLAGS) $(SHLIBFLAGS) $(EXTRA_PATH) -o $(EXE) \
        $(OBJ) $(EXTRA_LIB) $(LIB)

# Compilation rules

%.o:%.cpp
	$(CC) $(CCFLAGS) $(SHFLAGS) $(EXTRA_INC) -c $<

%.d:%.cpp
	$(CC) $(CCFLAGS) $(EXTRA_INC) $(DEPFLAGS) $< > $@

# Individual dependencies

DEPENDS = $(OBJ:.o=.d)
sinclude $(DEPENDS)
